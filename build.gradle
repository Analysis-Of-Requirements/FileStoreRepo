plugins {
    id 'java'
    id 'net.ltgt.errorprone' version "${errorPronePluginVersion}"
    id 'jacoco'
}

allprojects {
    apply plugin: 'war'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'jacoco'

    sourceCompatibility = javaVersion

    group 'io.javaclasses.filehub'
    version fileHubProjectVersion

    war {
        enabled = 'true'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }

    jacoco {
        toolVersion = "0.8.5"
    }

    dependencies {

        compile "com.sparkjava:spark-core:${sparkCoreVersion}"

        compile "com.google.code.gson:gson:${gsonVersion}"

        testCompile "com.google.guava:guava-testlib:${guavaVersion}"
        compile "com.google.guava:guava:${guavaVersion}"

        testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testCompile "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

        testCompile "com.google.truth:truth:${googleTruthVersion}"

        testCompile "nl.jqno.equalsverifier:equalsverifier:${equalsVerifierVersion}"

        testCompile "org.skyscreamer:jsonassert:${jsonAssertVersion}"
        testCompile "org.json:json:${jsonOrgVersion}"

        errorprone "com.google.errorprone:error_prone_core:${errorProneCoreDependencyVersion}"
        errorproneJavac "com.google.errorprone:javac:${errorProneJavacDependencyVersion}"

        compile "org.slf4j:slf4j-api:${slf4jVersion}"
        compile "org.slf4j:slf4j-simple:${slf4jVersion}"
    }
}
